# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 3 * * 1'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    # Choose the appropriate runner based on the language
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || (matrix.language == 'csharp' && 'windows-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: csharp
            build-mode: autobuild

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Debug step to display the repository structure
      - name: Debug Repository Structure
        run: |
          echo "Listing all files in the repository..."
          ls -R

      # Setup the correct .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Install MAUI and other necessary workloads
      - name: Install .NET MAUI Workloads
        run: |
          dotnet workload update
          dotnet workload install maui
          dotnet workload install android
          dotnet workload install ios

      # Restore dependencies for each .csproj file
      - name: Restore Dependencies for .csproj Projects
        shell: bash
        run: |
          set -e
          for project in $(find . -type f -name "*.csproj"); do
            echo "Restoring dependencies for $project"
            dotnet restore "$project" || exit 1
          done

      # Build each .csproj file
      - name: Build .csproj Projects
        shell: bash
        run: |
          set -e
          for project in $(find . -type f -name "*.csproj"); do
            echo "Building $project"
            dotnet build "$project" --configuration Debug || exit 1
          done

      # Restore dependencies for each solution file (.sln)
      - name: Restore Dependencies for Solutions
        shell: bash
        run: |
          for solution in $(find . -type f -name "*.sln"); do
            echo "Restoring dependencies for $solution"
            dotnet restore "$solution"
          done

      # Build each solution file
      - name: Build Solutions
        shell: bash
        run: |
          for solution in $(find . -type f -name "*.sln"); do
            echo "Building $solution"
            dotnet build "$solution" --configuration Debug
          done

      # Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          queries: security-extended,security-and-quality

      # Optional manual build step if manual mode is used
      - name: Manual Build (if required)
        if: matrix.build-mode == 'manual'
        shell: bash
        run: |
          echo 'Using manual build mode for CodeQL analysis...'
          dotnet restore
          dotnet build --configuration Release
          dotnet test --configuration Release

      # Perform the CodeQL analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
